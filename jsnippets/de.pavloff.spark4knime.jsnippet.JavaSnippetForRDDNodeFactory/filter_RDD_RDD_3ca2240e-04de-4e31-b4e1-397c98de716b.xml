<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="filter_RDD_RDD_3ca2240e-04de-4e31-b4e1-397c98de716b.xml">
<entry key="Meta category" type="xstring" value="de.pavloff.spark4knime.jsnippet.JavaSnippetForRDDNodeFactory"/>
<entry key="Category" type="xstring" value="Spark"/>
<entry key="Name" type="xstring" value="filter.RDD-RDD"/>
<entry key="Description" type="xstring" value="Filter function to filter RDD."/>
<entry key="Version" type="xstring" value="version 1.x"/>
<config key="Snippet">
<entry key="scriptImports" type="xstring" value="// Your custom imports:%%00010import org.apache.spark.api.java.JavaRDD;%%00010import org.apache.spark.api.java.function.Function;%%00010"/>
<entry key="scriptFields" type="xstring" value="// Your custom variables:%%00010"/>
<entry key="scriptBody" type="xstring" value="// Enter your code here:%%00010//%%00010// JavaRDD&lt;T&gt; filter(Function&lt;T,Boolean&gt; f)%%00010// returns a new RDD containing only the elements%%00010// that satisfy a predicate. Function f implements%%00010// org.apache.spark.api.java.function.Function class.%%00010//%%00010// T is type of entries in in_RDD and in out_RDD. Function f should implement a%%00010// &lt;Boolean&gt; call(T) method.%%00010//%%00010out_RDD = in_RDD.filter(new Function&lt;T, Boolean&gt;() {%%00010%%00009@Override%%00010%%00009public Boolean call(T arg0) throws Exception {%%00010%%00009%%00009return arg0 != 0;%%00010%%00009}%%00010});%%00010"/>
<config key="jarFiles">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="outCols">
<entry key="array-size" type="xint" value="1"/>
<config key="0">
<entry key="Name" type="xstring" value="RDD"/>
<entry key="JavaName" type="xstring" value="out_RDD"/>
<entry key="JavaType" type="xstring" value="org.apache.spark.api.java.JavaRDD"/>
<config key="Type">
<entry key="cell_class" type="xstring" value="de.pavloff.spark4knime.RddCell"/>
<entry key="is_null" type="xboolean" value="false"/>
</config>
<entry key="replaceExisting" type="xboolean" value="true"/>
</config>
</config>
<config key="outVars">
<entry key="array-size" type="xint" value="0"/>
</config>
<config key="inCols">
<entry key="array-size" type="xint" value="1"/>
<config key="0">
<entry key="Name" type="xstring" value="RDD"/>
<entry key="JavaName" type="xstring" value="in_RDD"/>
<entry key="JavaType" type="xstring" value="org.apache.spark.api.java.JavaRDD"/>
<config key="Type">
<entry key="cell_class" type="xstring" value="de.pavloff.spark4knime.RddCell"/>
<entry key="is_null" type="xboolean" value="false"/>
</config>
</config>
</config>
<config key="inVars">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="version" type="xstring" value="version 1.x"/>
<entry key="templateUUID" type="xstring" value="3ca2240e-04de-4e31-b4e1-397c98de716b"/>
<entry key="runOnExecute" type="xboolean" value="false"/>
</config>
</config>
