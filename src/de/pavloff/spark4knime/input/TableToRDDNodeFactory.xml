<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="./tableToRDD.png" type="Source" xmlns="http://knime.org/node/v2.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://knime.org/node/v2.10 http://knime.org/node/v2.10.xsd">
    <name>TableToRDD</name>
    
    <shortDescription>
        Read a table from previous node as input and parallelize data by rows.
    </shortDescription>
    
    <fullDescription>
        <intro>Insert long description here...</intro>
        
        
        <option name="Spark master"> Master is a Spark, Mesos or YARN cluster URL, or a special "local" string to run in local mode. Default value "local[*]" allows to run Spark locally with as many worker threads as logical cores on your machine</option>
        <!-- <option name="short name of second option (like in the dialog)">description of second option</option> -->
        <!-- possibly more options that can also be grouped by tabs -->
        <!--
        <tab name="Standard Options">
            <option name="short name of first option (like in the dialog)">description of first option</option>
            <option name="short name of second option (like in the dialog)">description of second option</option>
        </tab>
        <tab name="Advanced Options">
            <option name="short name of first advanced option (like in the dialog)">description of first advanced option</option>
        </tab>
        -->
    </fullDescription>
    
    <ports>
        <inPort index="0" name="Input table to parallelize">One or two columns (key-value pair) will be parallelized.</inPort>
        <!-- possibly more input ports here-->
        <outPort index="0" name="Spark RDD">Resilient distributed dataset (RDD) with a text file parallelized by lines</outPort>
        <!-- possibly more output ports here-->
    </ports>
    
    <views>
        <view index="0" name="RDD entries">Table shows first entries of RDD</view>
        <!--view index="1" name="name of second view">Description of second view...</view-->
    </views>
</knimeNode>
